
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author tasni
 */

/**
 * Bu sınıf, oyuncunun adını girdiği ve oyuna başlamak için butona bastığı ilk GUI'dir.
 * Oyuncu ismini alır, sunucuya bağlanır ve ismi gönderir.
 * Bağlantı başarılıysa oyun ekranını (`GameScreen`) açar.
 */
public class GameClientGUI extends javax.swing.JFrame {
 // Ağ bağlantısı için gerekli değişkenler
    
    // Oyuncunun sunucuya bağlanmasını sağlayan soket (ağ bağlantısını temsil eder)
    private Socket socket;
    // Sunucuya mesaj göndermek için kullanılır (örneğin: "JOIN", "ROLL", "REPLAY_YES")
    private PrintWriter out;
    // Sunucudan gelen mesajları okumak için kullanılır (örneğin: "ROLL_RESULT", "SIRA")
    private BufferedReader in;
    // Oyuncu ismi
    private String playerName;

    
    public GameClientGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        playerNameField = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Oyuncu Adı : ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));
        jPanel1.add(playerNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 190, -1));

        startButton.setBackground(new java.awt.Color(204, 0, 0));
        startButton.setForeground(new java.awt.Color(255, 255, 255));
        startButton.setText("Oyuna Başla");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        jPanel1.add(startButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, -1, -1));

        statusLabel.setText("Bağlantı Bekleniyor...");
        jPanel1.add(statusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        jLabel2.setFont(new java.awt.Font("Sitka Banner", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 51, 0));
        jLabel2.setText("SNAKES AND LADDERS ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 370, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        
        playerName = playerNameField.getText(); // TextField'dan oyuncu ismi al

        if (!playerName.isEmpty()) {
            statusLabel.setText("Oyuncu: " + playerName + " - Hazir!");
        } else {
            JOptionPane.showMessageDialog(this, "Lütfen adınızı giriniz!", "Uyarı", JOptionPane.WARNING_MESSAGE);
            return; // Eğer isim yoksa devam etmesin!
        }

        try {
            socket = new Socket("51.20.114.255", 1234); // AWS yerine şimdilik localhost
            out = new PrintWriter(socket.getOutputStream(), true);
            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            // Server'a oyuncu adını gönderiyoruz
            out.println("JOIN " + playerName);  //
            openGameScreen();                   // Dinlemeyi GameScreen yapması için
            
        } catch (IOException e) {
            statusLabel.setText("Baglantı hatasi: " + e.getMessage());
        }

    }//GEN-LAST:event_startButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */   // Server'a oyuncu adını gönderiyoruz
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameClientGUI().setVisible(true);
            }
        });
    }

    /**
     * Oyun ekranını (GameScreen) açar ve bu pencereyi kapatır
     */
    private void openGameScreen() {
        javax.swing.SwingUtilities.invokeLater(() -> {
            GameScreen gameScreen = new GameScreen(playerName, out, in);
            gameScreen.setVisible(true);
            this.dispose();
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField playerNameField;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
